name: Build Application

on:
  push:
    branches: [ "main" ]
    tags:
      - v*
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build_linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install 
        pip install -r /requirements.txt
        pyinstaller Producers-Toolkit.spec
    - name: 'Zip files'
      uses: thedoctor0/zip-release@0.7.5
      with:
        type: 'zip'
        filename: 'Producers-Toolkit_linux.zip'
        path: dist/Producers-Toolkit
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build_artifact_linux
        path: Producers-Toolkit_linux.zip

  build_windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r /requirements.txt
        pyinstaller Producers-Toolkit.spec
    - name: 'Zip files'
      uses: thedoctor0/zip-release@0.7.5
      with:
        type: 'zip'
        filename: 'Producers-Toolkit_windows.zip'
        path: dist/Producers-Toolkit
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build_artifact_windows
        path: Producers-Toolkit_windows.zip

  build_macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt
        pyinstaller Producers-Toolkit.spec
    - name: 'Zip files'
      uses: thedoctor0/zip-release@0.7.5
      with:
        type: 'zip'
        filename: 'Producers-Toolkit_macos.zip'
        path: dist/Producers-Toolkit
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build_artifact_macos
        path: Producers-Toolkit_macos.zip

  release:
    name: Release pushed tag
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-22.04
    needs: [ build_linux, build_macos, build_windows ]
    permissions:
      contents: write
    steps:
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${GITHUB_REPOSITORY#*/} ${tag#v}" \
              --generate-notes
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: build_artifact_windows
      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: build_artifact_linux
      - name: Download MacOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: build_artifact_macos
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: .
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/Producers-Toolkit*.zip
