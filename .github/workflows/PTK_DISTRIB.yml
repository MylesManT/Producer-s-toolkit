name: Build and Release Cross-Platform

on:
  push:
    branches: ["main"]
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r PTK/requirements.txt
        pip install pyinstaller
    
    - name: Build with PyInstaller (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onefile --windowed --name Producers-Toolkit_0.19-Test --icon=icon.ico Producers-Toolkit.py
    
    - name: Build with PyInstaller (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller  --onefile --windowed --name Producers-Toolkit_0.19-Test --icon=icon.icns Producers-Toolkit.py
    
    - name: Build with PyInstaller (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pyinstaller --onefile --name Producers-Toolkit_0.19-Test Producers-Toolkit.py
    
    - name: Create DMG for macOS
      if: matrix.os == 'macos-latest'
      run: |
        brew install create-dmg
        create-dmg \
          --volname "Producers-Toolkit_0.19-Test Installer" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --app-drop-link 600 185 \
          "Producers-Toolkit_0.19-Test-macOS.dmg" \
          "dist/Producers-Toolkit_0.19-Test.app"
    
    - name: Create ZIP for Windows
      if: matrix.os == 'windows-latest'
      run: |
        Compress-Archive -Path dist/Producers-Toolkit_0.19-Test.exe -DestinationPath Producers-Toolkit_0.19-Test-Windows.zip
    
    - name: Create TAR.GZ for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        tar -czvf Producers-Toolkit_0.19-Test-Linux.tar.gz -C dist Producers-Toolkit_0.19-Test
    
    - name: Upload Windows Artifact
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: Producers-Toolkit_0.19-Test-Windows
        path: Producers-Toolkit_0.19-Test-Windows.zip
    
    - name: Upload macOS Artifact
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: Producers-Toolkit_0.19-Test-macOS
        path: Producers-Toolkit_0.19-Test-macOS.dmg
    
    - name: Upload Linux Artifact
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: Producers-Toolkit_0.19-Test-Linux
        path: Producers-Toolkit_0.19-Test-Linux.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          Producers-Toolkit_0.19-Test-Windows/Producers-Toolkit_0.19-Test-Windows.zip
          Producers-Toolkit_0.19-Test-macOS/Producers-Toolkit_0.19-Test-macOS.dmg
          Producers-Toolkit_0.19-Test-Linux/Producers-Toolkit_0.19-Test-Linux.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
