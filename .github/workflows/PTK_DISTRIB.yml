# ...existing code...
name: Build and Release Cross-Platform

on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r PTK/requirements.txt
          pip install pyinstaller

      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --onefile --windowed --name Producers-Toolkit_0.19-Test PTK/Producers-Toolkit.py

      - name: Build (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          pyinstaller --onefile --windowed --name Producers-Toolkit_0.19-Test PTK/Producers-Toolkit.py

      - name: Build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller --onefile --name Producers-Toolkit_0.19-Test PTK/Producers-Toolkit.py

      - name: Create DMG for macOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install create-dmg
          create-dmg \
            --volname "Producers-Toolkit_0.19-Test Installer" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --app-drop-link 600 185 \
            "Producers-Toolkit_0.19-Test-macOS.dmg" \
            "dist/Producers-Toolkit_0.19-Test.app"

      - name: Create ZIP for Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Compress-Archive -Path dist/Producers-Toolkit_0.19-Test.exe -DestinationPath Producers-Toolkit_0.19-Test-Windows.zip

      - name: Create TAR.GZ for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          tar -czvf Producers-Toolkit_0.19-Test-Linux.tar.gz -C dist Producers-Toolkit_0.19-Test

      - name: Upload Windows Artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: build_artifact_windows
          path: Producers-Toolkit_0.19-Test-Windows.zip

      - name: Upload macOS Artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: build_artifact_macos
          path: Producers-Toolkit_0.19-Test-macOS.dmg

      - name: Upload Linux Artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: build_artifact_linux
          path: Producers-Toolkit_0.19-Test-Linux.tar.gz

  release:
    name: Release pushed tag
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [ build ]
    permissions:
      contents: write
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: build_artifact_windows
          path: build_artifact_windows

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: build_artifact_macos
          path: build_artifact_macos

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: build_artifact_linux
          path: build_artifact_linux

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create GitHub release and upload files
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build_artifact_windows/*.zip
            build_artifact_macos/*.dmg
            build_artifact_linux/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# ...existing code...