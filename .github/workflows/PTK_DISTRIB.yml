# ...existing code...
name: Build and Release Cross-Platform

on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r PTK/requirements.txt
          pip install pyinstaller

      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --onefile --windowed --name Producers-Toolkit_0.19-Test PTK/Producers-Toolkit.py

      - name: Build (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          pyinstaller --onefile --windowed --name Producers-Toolkit_0.19-Test PTK/Producers-Toolkit.py

      - name: Build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller --onefile --name Producers-Toolkit_0.19-Test PTK/Producers-Toolkit.py

      - name: Create DEB package for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p producers-toolkit-deb/DEBIAN
          mkdir -p producers-toolkit-deb/usr/local/bin
          mkdir -p producers-toolkit-deb/usr/share/applications
          mkdir -p producers-toolkit-deb/usr/share/pixmaps
          
          # Copy executable
          cp dist/Producers-Toolkit_0.19-Test producers-toolkit-deb/usr/local/bin/producers-toolkit
          chmod +x producers-toolkit-deb/usr/local/bin/producers-toolkit
          
          # Create control file
          cat > producers-toolkit-deb/DEBIAN/control << EOF
          Package: producers-toolkit
          Version: 0.19
          Section: utils
          Priority: optional
          Architecture: amd64
          Maintainer: Myles A. Taylor <muncht@gmail.com>
          Description: Producers Toolkit Application
           A comprehensive toolkit for producers.
          EOF
          
          # Create desktop entry
          cat > producers-toolkit-deb/usr/share/applications/producers-toolkit.desktop << EOF
          [Desktop Entry]
          Name=Producers Toolkit
          Comment=Producers Toolkit Application
          Exec=/usr/local/bin/producers-toolkit
          Terminal=false
          Type=Application
          Categories=Utility;
          EOF
          
          # Build the deb package
          dpkg-deb --build producers-toolkit-deb
          mv producers-toolkit-deb.deb Producers-Toolkit_0.19-Test-Ubuntu.deb

      - name: Create DMG for macOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install create-dmg
          create-dmg \
            --volname "Producers-Toolkit_0.19-Test Installer" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --app-drop-link 600 185 \
            "Producers-Toolkit_0.19-Test-macOS.dmg" \
            "dist/Producers-Toolkit_0.19-Test.app"

      - name: Create ZIP for Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Compress-Archive -Path dist/Producers-Toolkit_0.19-Test.exe -DestinationPath Producers-Toolkit_0.19-Test-Windows.zip

      - name: Create TAR.GZ for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          tar -czvf Producers-Toolkit_0.19-Test-Linux.tar.gz -C dist Producers-Toolkit_0.19-Test

      - name: Upload Windows Artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: build_artifact_windows
          path: Producers-Toolkit_0.19-Test-Windows.zip

      - name: Upload macOS Artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: build_artifact_macos
          path: Producers-Toolkit_0.19-Test-macOS.dmg

      - name: Upload Linux Artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: build_artifact_linux
          path: Producers-Toolkit_0.19-Test-Linux.tar.gz

      - name: Upload Ubuntu DEB Artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: build_artifact_ubuntu_deb
          path: Producers-Toolkit_0.19-Test-Ubuntu.deb

  release:
    name: Release pushed tag
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [ build ]
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: build_artifact_windows
          path: build_artifact_windows

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: build_artifact_macos
          path: build_artifact_macos

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: build_artifact_linux
          path: build_artifact_linux

      - name: Download Ubuntu DEB artifact
        uses: actions/download-artifact@v4
        with:
          name: build_artifact_ubuntu_deb
          path: build_artifact_ubuntu_deb

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Producers Toolkit ${{ github.ref_name }}
          body: |
            ## Downloads
            
            Choose the appropriate file for your operating system:
            
            - **Windows**: Producers-Toolkit_0.19-Test-Windows.zip
            - **macOS**: Producers-Toolkit_0.19-Test-macOS.dmg
            - **Linux (Generic)**: Producers-Toolkit_0.19-Test-Linux.tar.gz
            - **Ubuntu/Debian**: Producers-Toolkit_0.19-Test-Ubuntu.deb
            
            ## Installation Instructions
            
            ### Windows
            1. Download Producers-Toolkit_0.19-Test-Windows.zip
            2. Extract the ZIP file
            3. Run Producers-Toolkit_0.19-Test.exe
            
            ### macOS
            1. Download Producers-Toolkit_0.19-Test-macOS.dmg
            2. Open the DMG file
            3. Drag Producers Toolkit to your Applications folder
            
            ### Linux (Generic)
            1. Download Producers-Toolkit_0.19-Test-Linux.tar.gz
            2. Extract: `tar -xzvf Producers-Toolkit_0.19-Test-Linux.tar.gz`
            3. Run: `./Producers-Toolkit_0.19-Test`
            
            ### Ubuntu/Debian
            1. Download Producers-Toolkit_0.19-Test-Ubuntu.deb
            2. Install: `sudo dpkg -i Producers-Toolkit_0.19-Test-Ubuntu.deb`
            3. Launch from applications menu or run: `producers-toolkit`
          draft: false
          prerelease: false

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build_artifact_windows/Producers-Toolkit_0.19-Test-Windows.zip
          asset_name: Producers-Toolkit_0.19-Test-Windows.zip
          asset_content_type: application/zip

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build_artifact_macos/Producers-Toolkit_0.19-Test-macOS.dmg
          asset_name: Producers-Toolkit_0.19-Test-macOS.dmg
          asset_content_type: application/x-apple-diskimage

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build_artifact_linux/Producers-Toolkit_0.19-Test-Linux.tar.gz
          asset_name: Producers-Toolkit_0.19-Test-Linux.tar.gz
          asset_content_type: application/gzip

      - name: Upload Ubuntu DEB Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build_artifact_ubuntu_deb/Producers-Toolkit_0.19-Test-Ubuntu.deb
          asset_name: Producers-Toolkit_0.19-Test-Ubuntu.deb
          asset_content_type: application/vnd.debian.binary-package